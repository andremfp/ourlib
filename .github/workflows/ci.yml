name: PR Build Check and Firebase Deployment

on:
  pull_request:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Cache Root Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install root dependencies
        run: yarn install

      - name: Cache Functions Dependencies
        uses: actions/cache@v4
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-functions-node_modules-${{ hashFiles('functions/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-functions-node_modules-

      - name: Install functions dependencies
        run: cd functions && yarn install

      - name: Run linter
        run: yarn lint

      - name: Build the project
        run: yarn build

      - name: Cache Functions Build Output
        uses: actions/cache@v4
        with:
          path: functions/lib
          key: ${{ runner.os }}-functions-lib-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-functions-lib-

  test:
    runs-on: ubuntu-latest
    env:
      FIREBASE_EMULATORS_PATH: ${{ github.workspace }}/emulator-cache
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Root Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

      - name: Restore Functions Dependencies
        uses: actions/cache@v4
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-functions-node_modules-${{ hashFiles('functions/yarn.lock') }}

      - name: Restore Functions Build Output
        uses: actions/cache@v4
        with:
          path: functions/lib
          key: ${{ runner.os }}-functions-lib-${{ github.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Set up Java for Firebase Emulators
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Cache Firebase Emulators
        uses: actions/cache@v4
        with:
          path: ${{ env.FIREBASE_EMULATORS_PATH }}
          key: ${{ runner.os }}-firebase-emulators-${{hashFiles('emulator-cache/**') }}

      - name: Run Tests
        run: yarn test
        env:
          FIREBASE_DEBUG_MODE: true
          FUNCTIONS_EMULATOR: true

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Restore Root Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}

      - name: Restore Functions Dependencies
        uses: actions/cache@v4
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-functions-node_modules-${{ hashFiles('functions/yarn.lock') }}

      - name: Restore Functions Build Output
        uses: actions/cache@v4
        with:
          path: functions/lib
          key: ${{ runner.os }}-functions-lib-${{ github.sha }}

      - name: Install Root Dependencies (if not cached)
        run: yarn install

      - name: Install Functions Dependencies (if not cached)
        run: cd functions && yarn install

      - name: Build Functions (only if necessary)
        run: |
          if [ ! -d "functions/lib" ]; then
            cd functions && yarn build
          fi

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"

      - name: Deploy Firebase Rules
        run: npx firebase-tools deploy --only firestore:rules --project=${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy Firebase Indexes
        run: npx firebase-tools deploy --only firestore:indexes --project=${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy Firebase Functions
        run: npx firebase-tools deploy --only functions --project=${{ secrets.FIREBASE_PROJECT_ID }}
